table Occupancy
	lineageTag: 8b7dd1a6-1e2e-4bfe-a636-4caff5fb9b74

	column Portfolio
		dataType: string
		lineageTag: 122a5a06-d25e-4b1c-8637-8bc60240073f
		summarizeBy: none
		sourceColumn: Portfolio

		annotation SummarizationSetBy = Automatic

	column Country
		dataType: string
		lineageTag: eb32295a-ecf6-4449-bad1-fcfb73a6114c
		summarizeBy: none
		sourceColumn: Country

		annotation SummarizationSetBy = Automatic

	column Category
		dataType: string
		lineageTag: 6bed05f5-4cb6-40ed-b1b3-ba1c9f0b583f
		summarizeBy: none
		sourceColumn: Category

		annotation SummarizationSetBy = Automatic

	column 'Previous Year'
		dataType: double
		lineageTag: d9be3e31-e004-413f-ac19-8d0142a872a1
		summarizeBy: sum
		sourceColumn: Previous Year

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column 'Current Year'
		dataType: double
		lineageTag: 78b50e5d-c26e-4cc9-a742-b342a0bd1801
		summarizeBy: sum
		sourceColumn: Current Year

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column Exhibit
		dataType: string
		lineageTag: 175caee6-7238-4cf1-83ee-ca24fb14f461
		summarizeBy: none
		sourceColumn: Exhibit

		annotation SummarizationSetBy = Automatic

	column 'Current Year (Occupancy)' = ```
			
			
			DIVIDE(
			    SUMX(
			    FILTER('Occupancy', Occupancy[Category]<>"Unknown"),
			    Occupancy[Current Year]
			) 
			,
			SUM(Occupancy[Current Year]
			))
			```
		lineageTag: 41d0a335-59f8-455d-a3b3-f402c871f64d
		summarizeBy: sum

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column 'Difference (Occupancy)' =
			
			[Current Year (Occupancy)] - [Previous Year (Occupancy)]
		lineageTag: 099cb7fb-ed6a-41aa-bc36-d7cf5357e0d9
		summarizeBy: sum

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column 'Previous Year (Occupancy)' = ```
			
			
			DIVIDE(
			    SUMX(
			    FILTER('Occupancy', Occupancy[Category]<>"Unknown"),
			    Occupancy[Previous Year]
			) 
			,
			SUM(Occupancy[Previous Year])
			)
			```
		lineageTag: cde8ae8f-04b7-4fa7-aade-29fa57e09d67
		summarizeBy: sum

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column PY_Ground-Up
		dataType: double
		lineageTag: b8ad2632-a17a-4fb8-9456-081666527fd4
		summarizeBy: sum
		sourceColumn: PY_Ground-Up

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column PY_Gross
		dataType: double
		lineageTag: fff6f571-5937-4da4-89cf-4974b1813781
		summarizeBy: sum
		sourceColumn: PY_Gross

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column 'PY_Net Pre-Cat'
		dataType: double
		lineageTag: c20bf317-d361-4338-ab7a-d51622ec8a9d
		summarizeBy: sum
		sourceColumn: PY_Net Pre-Cat

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column 'Client Name'
		dataType: string
		lineageTag: 2b2de334-82ca-4cc7-b9a2-521c42c66386
		summarizeBy: none
		sourceColumn: Client Name

		annotation SummarizationSetBy = Automatic

	column 'Report Date'
		dataType: string
		lineageTag: 1bfbe454-1584-4e3e-8a7f-e39f77f18d1f
		summarizeBy: none
		sourceColumn: Report Date

		annotation SummarizationSetBy = Automatic

	column '# Risks (previous year)'
		dataType: double
		lineageTag: 37b1ad2d-8191-4536-9ce6-12a8fffbf08d
		summarizeBy: sum
		sourceColumn: # Risks (previous year)

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column 'Average SI (previous year)'
		dataType: double
		lineageTag: e695148a-6d2c-4739-ad2c-a72679dfdb45
		summarizeBy: sum
		sourceColumn: Average SI (previous year)

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column '# Risks (current year)'
		dataType: double
		lineageTag: 2d8c9073-8248-43c5-b539-e74bd1dc1dac
		summarizeBy: sum
		sourceColumn: # Risks (current year)

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column 'Average SI (current year)'
		dataType: double
		lineageTag: 68dcba51-d89f-4796-81e6-1780a26b0c16
		summarizeBy: sum
		sourceColumn: Average SI (current year)

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column CY_Ground-Up
		dataType: double
		lineageTag: 470e0a7d-4838-44c8-a742-21fbab31b8ff
		summarizeBy: sum
		sourceColumn: CY_Ground-Up

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column CY_Gross
		dataType: double
		lineageTag: 3ab6134d-efba-4876-8408-88f4d4463c83
		summarizeBy: sum
		sourceColumn: CY_Gross

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column 'CY_Net Pre-Cat'
		dataType: double
		lineageTag: 7d673936-18dc-4372-8779-8ea96a496afc
		summarizeBy: sum
		sourceColumn: CY_Net Pre-Cat

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column 'Report Name'
		dataType: string
		lineageTag: 54b21a8d-cc8c-4069-8c68-bb4cf19757d5
		summarizeBy: none
		sourceColumn: Report Name

		annotation SummarizationSetBy = Automatic

	partition Occupancy = m
		mode: import
		source = ```
				let
				    // Load the Excel file
				    Source = Excel.Workbook(File.Contents("C:\Users\farid.shahbalayev\Desktop\Power BI\Guy Carpenter\All Other Comparison Report.xlsx"), null, false),
				    
				    // Load the Occupancy sheet
				    Occupancy_sheet = Source{[Item="Occupancy",Kind="Sheet"]}[Data],
				    
				    // Extract the client name from cell B3 and report date from cell A2
				    ClientName = Occupancy_sheet{2}[Column2],
				    ReportDate = Occupancy_sheet{1}[Column1],
				    
				    // Extract the report name from the Cover sheet, 2nd column, 14th row
				    Cover_Sheet = Source{[Item="Cover",Kind="Sheet"]}[Data],
				    Cover_Changed_Type = Table.TransformColumnTypes(Cover_Sheet,{{"Column1", type date}, {"Column2", type text}}),
				    ReportName = Cover_Changed_Type{13}[Column2],  // Rows are zero-indexed, so row 14 is index 13
				    
				    // Filter out null and whitespace values
				    FilterNullAndWhitespace = each List.Select(_, each _ <> null and (not (_ is text) or Text.Trim(_) <> "")),
				    
				    // Add custom columns to identify empty rows and sections
				    #"Added Custom" = Table.AddColumn(Occupancy_sheet, "IsEmptyRow", each try List.IsEmpty(FilterNullAndWhitespace(Record.FieldValues(_))) otherwise false),
				    #"Added Index" = Table.AddIndexColumn(#"Added Custom", "Index", -1),
				    #"Added Custom1" = Table.AddColumn(#"Added Index", "Section", each if [IsEmptyRow] then -1 else if try #"Added Index"[IsEmptyRow]{[Index]} otherwise true then [Index] else null),
				    
				    // Remove blank rows and fill down section values
				    #"Removed Blank Rows" = Table.SelectRows(#"Added Custom1", each not [IsEmptyRow]),
				    #"Filled Down" = Table.FillDown(#"Removed Blank Rows", {"Section"}),
				    
				    // Group rows by section and select the relevant group
				    #"Grouped Rows" = Table.Group(#"Filled Down", {"Section"}, {{"Rows", each _}}, GroupKind.Local),
				    #"Selected Group" = #"Grouped Rows"[Rows]{1},
				    
				    // Remove unnecessary columns and rows
				    #"Removed Columns" = Table.RemoveColumns(#"Selected Group", {"IsEmptyRow", "Index", "Section"}),
				    #"Removed Top Rows" = Table.Skip(#"Removed Columns", each try List.IsEmpty(List.Skip(FilterNullAndWhitespace(Record.FieldValues(_)), 2)) otherwise false),
				    #"Transposed Table" = Table.Transpose(#"Removed Top Rows"),
				    #"Removed Top Rows1" = Table.Skip(#"Transposed Table", each try List.IsEmpty(List.Skip(FilterNullAndWhitespace(Record.FieldValues(_)), 1)) otherwise false),
				    #"Transposed Table1" = Table.Transpose(#"Removed Top Rows1"),
				    #"Removed Other Columns" = Table.SelectColumns(#"Transposed Table1", List.Select(Table.ColumnNames(#"Transposed Table1"), each try not List.IsEmpty(FilterNullAndWhitespace(Table.Column(#"Transposed Table1", _))) otherwise true)),
				    #"Removed Other Columns1" = Table.SelectColumns(#"Removed Other Columns",{"Column1", "Column2", "Column3", "Column4", "Column5", "Column6", "Column7", "Column8", "Column9", "Column10", "Column11", "Column12", "Column13", "Column14", "Column15"}),
				    
				    // Filter rows and promote headers
				    #"Filtered Rows" = Table.SelectRows(#"Removed Other Columns1", each ([Column1] <> "Total") and ([Column2] <> null)),
				    #"Promoted Headers" = Table.PromoteHeaders(#"Filtered Rows", [PromoteAllScalars=true]),
				    
				    // Change column types
				    #"Changed Type1" = Table.TransformColumnTypes(#"Promoted Headers",{{"Portfolio", type text}, {"Country", type text}, {"Occupancy", type text}, {"Geocoded Sums Insured", type number}, {"Geocoded Sums Insured_1", type number}}),
				    #"Filled Down1" = Table.FillDown(#"Changed Type1",{"Portfolio"}),
				    
				    // Rename columns
				    #"Renamed Columns" = Table.RenameColumns(#"Filled Down1",{{"Geocoded Sums Insured", "Previous Year"}, {"Geocoded Sums Insured_1", "Current Year"}}),
				    
				    // Add custom columns for client name, report date, report name, and exhibit
				    #"Added Custom2" = Table.AddColumn(#"Renamed Columns", "Client Name", each ClientName),
				    #"Added Custom3" = Table.AddColumn(#"Added Custom2", "Report Date", each ReportDate),
				    #"Added Custom4" = Table.AddColumn(#"Added Custom3", "Report Name", each ReportName),
				    #"Added Custom5" = Table.AddColumn(#"Added Custom4", "Exhibit", each "Known Occupancy"),
				    
				    // Rename additional columns and change types
				    #"Renamed Columns2" = Table.RenameColumns(#"Added Custom5",{{"# Risks (Locations)", "# Risks (previous year)"}, {"Average SI", "Average SI (previous year)"}, {"# Risks (Locations)_2", "# Risks (current year)"}, {"Average SI_3", "Average SI (current year)"}}),
				    #"Renamed Columns1" = Table.RenameColumns(#"Renamed Columns2",{{"Occupancy", "Category"}, {"Ground-Up", "PY_Ground-Up"}, {"Gross", "PY_Gross"}, {"Net Pre-Cat", "PY_Net Pre-Cat"}, {"Ground-Up_4", "CY_Ground-Up"}, {"Gross_5", "CY_Gross"}, {"Net Pre-Cat_6", "CY_Net Pre-Cat"}}),
				    #"Changed Type" = Table.TransformColumnTypes(#"Renamed Columns1",{{"PY_Ground-Up", type number}, {"PY_Gross", type number}, {"PY_Net Pre-Cat", type number}, {"CY_Ground-Up", type number}, {"CY_Gross", type number}, {"CY_Net Pre-Cat", type number}, {"# Risks (previous year)", type number}, {"Average SI (previous year)", type number}, {"# Risks (current year)", type number}, {"Average SI (current year)", type number}}),
				    #"Replaced Errors" = Table.ReplaceErrorValues(#"Changed Type", {{"Average SI (current year)", 0}}),
				    #"Replaced Errors1" = Table.ReplaceErrorValues(#"Replaced Errors", {{"Average SI (previous year)", 0}})
				in
				    #"Replaced Errors1"
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

