table 'Year Built'
	lineageTag: 67a13fb2-e136-46cd-b317-2d748467fbb7

	column Portfolio
		dataType: string
		lineageTag: 3f94c887-6d3c-48b9-9038-d99fcad82c1a
		summarizeBy: none
		sourceColumn: Portfolio

		annotation SummarizationSetBy = Automatic

	column Country
		dataType: string
		lineageTag: c25170b2-3188-43b6-be21-cca6b30b0625
		summarizeBy: none
		sourceColumn: Country

		annotation SummarizationSetBy = Automatic

	column Category
		dataType: string
		lineageTag: cc1a6c80-3791-4d31-8dbb-405bcc7d9d36
		summarizeBy: none
		sourceColumn: Category

		annotation SummarizationSetBy = Automatic

	column 'Previous Year'
		dataType: double
		lineageTag: 328323f3-d457-4e94-b92a-2a50eabc7fdf
		summarizeBy: sum
		sourceColumn: Previous Year

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column 'Current Year'
		dataType: double
		lineageTag: 28e89bfd-1b58-451e-8f57-e125dba3cdde
		summarizeBy: sum
		sourceColumn: Current Year

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column Exhibit
		dataType: string
		lineageTag: 4af2d8ce-a1c3-43b6-90b2-f1531bca93ac
		summarizeBy: none
		sourceColumn: Exhibit

		annotation SummarizationSetBy = Automatic

	column 'Current Year (Year Built)' = ```
			
			
			DIVIDE(
			    SUMX(
			    FILTER('Year Built', 'Year Built'[Category]<>"Unknown"),
			    'Year Built'[Current Year]
			) 
			,
			SUM('Year Built'[Current Year]
			))
			```
		lineageTag: a5c510ce-a08e-4b7d-ba33-17d9aaa5ebbf
		summarizeBy: sum

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column 'Difference (Year Built)' =
			
			[Current Year (Year Built)] - [Previous Year (Year Built)]
		lineageTag: f8c6c41d-32b3-4b54-9327-f89db23ae117
		summarizeBy: sum

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column 'Previous Year (Year Built)' = ```
			
			
			DIVIDE(
			    SUMX(
			    FILTER('Year Built', 'Year Built'[Category]<>"Unknown"),
			    'Year Built'[Previous Year]
			) 
			,
			SUM('Year Built'[Previous Year]
			))
			```
		lineageTag: 7103fe97-bfc1-4e13-9f6e-894083c64579
		summarizeBy: sum

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column PY_Ground-Up
		dataType: double
		lineageTag: cf5cb403-8d3f-4afb-96b3-4ed77c92f6f1
		summarizeBy: sum
		sourceColumn: PY_Ground-Up

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column PY_Gross
		dataType: double
		lineageTag: 4512489d-b31d-491f-8c49-6c0262e77969
		summarizeBy: sum
		sourceColumn: PY_Gross

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column 'PY_Net Pre-Cat'
		dataType: double
		lineageTag: b5b7c349-3032-4373-ad59-0ebd79feba54
		summarizeBy: sum
		sourceColumn: PY_Net Pre-Cat

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column 'Client Name'
		dataType: string
		lineageTag: c687842d-bd63-4779-a1ca-084d024ce6b5
		summarizeBy: none
		sourceColumn: Client Name

		annotation SummarizationSetBy = Automatic

	column 'Report Date'
		dataType: string
		lineageTag: 126252f1-ffbe-4efd-a092-6318235448b9
		summarizeBy: none
		sourceColumn: Report Date

		annotation SummarizationSetBy = Automatic

	column '# Risks (previous year)'
		dataType: double
		lineageTag: 35c888c0-8a58-42b7-8a69-7ee3d949eb7b
		summarizeBy: sum
		sourceColumn: # Risks (previous year)

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column 'Average SI (previous year)'
		dataType: double
		lineageTag: ff554614-855c-4eed-981e-cbc288348cab
		summarizeBy: sum
		sourceColumn: Average SI (previous year)

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column '# Risks (current year)'
		dataType: double
		lineageTag: ddb567bd-5c9e-45fc-8a34-eca4f7846677
		summarizeBy: sum
		sourceColumn: # Risks (current year)

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column 'Average SI (current year)'
		dataType: double
		lineageTag: 798537f1-25a2-4d36-815d-238634043fa1
		summarizeBy: sum
		sourceColumn: Average SI (current year)

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column CY_Ground-Up
		dataType: double
		lineageTag: bfc8bbab-8f5c-4386-8879-777ae7e384a5
		summarizeBy: sum
		sourceColumn: CY_Ground-Up

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column CY_Gross
		dataType: double
		lineageTag: ee7b953d-69bd-474e-be41-ec2f9cd527ae
		summarizeBy: sum
		sourceColumn: CY_Gross

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column 'CY_Net Pre-Cat'
		dataType: double
		lineageTag: 0f9b86a1-638d-4c8d-af89-64e43c35e393
		summarizeBy: sum
		sourceColumn: CY_Net Pre-Cat

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column 'Report Name'
		dataType: string
		lineageTag: 271759ed-f18e-4a6d-acdc-40b152f73f26
		summarizeBy: none
		sourceColumn: Report Name

		annotation SummarizationSetBy = Automatic

	partition 'Year Built' = m
		mode: import
		source = ```
				let
				    // Load the Excel file
				    Source = Excel.Workbook(File.Contents("C:\Users\farid.shahbalayev\Desktop\Power BI\Guy Carpenter\All Other Comparison Report.xlsx"), null, false),
				    
				    // Load the Year Built sheet
				    #"Year Built_sheet" = Source{[Item="Year Built",Kind="Sheet"]}[Data],
				    
				    // Extract the client name from cell B3 and report date from cell A2
				    ClientName = #"Year Built_sheet"{2}[Column2],
				    ReportDate = #"Year Built_sheet"{1}[Column1],
				    
				    // Extract the report name from the Cover sheet, 2nd column, 14th row
				    Cover_Sheet = Source{[Item="Cover",Kind="Sheet"]}[Data],
				    Cover_Changed_Type = Table.TransformColumnTypes(Cover_Sheet,{{"Column1", type date}, {"Column2", type text}}),
				    ReportName = Cover_Changed_Type{13}[Column2],  // Rows are zero-indexed, so row 14 is index 13
				    
				    // Filter out null and whitespace values
				    FilterNullAndWhitespace = each List.Select(_, each _ <> null and (not (_ is text) or Text.Trim(_) <> "")),
				    
				    // Add custom columns to identify empty rows and sections
				    #"Added Custom" = Table.AddColumn(#"Year Built_sheet", "IsEmptyRow", each try List.IsEmpty(FilterNullAndWhitespace(Record.FieldValues(_))) otherwise false),
				    #"Added Index" = Table.AddIndexColumn(#"Added Custom", "Index", -1),
				    #"Added Custom1" = Table.AddColumn(#"Added Index", "Section", each if [IsEmptyRow] then -1 else if try #"Added Index"[IsEmptyRow]{[Index]} otherwise true then [Index] else null),
				    
				    // Remove blank rows and fill down section values
				    #"Removed Blank Rows" = Table.SelectRows(#"Added Custom1", each not [IsEmptyRow]),
				    #"Filled Down" = Table.FillDown(#"Removed Blank Rows", {"Section"}),
				    
				    // Group rows by section and select the relevant group
				    #"Grouped Rows" = Table.Group(#"Filled Down", {"Section"}, {{"Rows", each _}}, GroupKind.Local),
				    #"Selected Group" = #"Grouped Rows"[Rows]{1},
				    
				    // Remove unnecessary columns and rows
				    #"Removed Columns" = Table.RemoveColumns(#"Selected Group", {"IsEmptyRow", "Index", "Section"}),
				    #"Removed Top Rows" = Table.Skip(#"Removed Columns", each try List.IsEmpty(List.Skip(FilterNullAndWhitespace(Record.FieldValues(_)), 2)) otherwise false),
				    #"Transposed Table" = Table.Transpose(#"Removed Top Rows"),
				    #"Removed Top Rows1" = Table.Skip(#"Transposed Table", each try List.IsEmpty(List.Skip(FilterNullAndWhitespace(Record.FieldValues(_)), 1)) otherwise false),
				    #"Transposed Table1" = Table.Transpose(#"Removed Top Rows1"),
				    #"Removed Other Columns" = Table.SelectColumns(#"Transposed Table1", List.Select(Table.ColumnNames(#"Transposed Table1"), each try not List.IsEmpty(FilterNullAndWhitespace(Table.Column(#"Transposed Table1", _))) otherwise true)),
				    #"Removed Other Columns2" = Table.SelectColumns(#"Removed Other Columns",{"Column1", "Column2", "Column3", "Column4", "Column5", "Column6", "Column7", "Column8", "Column9", "Column10", "Column11", "Column12", "Column13", "Column14", "Column15"}),
				    
				    // Filter rows and promote headers
				    #"Filtered Rows" = Table.SelectRows(#"Removed Other Columns2", each ([Column2] <> null)),
				    #"Promoted Headers" = Table.PromoteHeaders(#"Filtered Rows", [PromoteAllScalars=true]),
				    
				    // Change column types
				    #"Changed Type1" = Table.TransformColumnTypes(#"Promoted Headers",{{"Portfolio", type text}, {"Country", type text}, {"Year Range", type text}, {"Geocoded Sums Insured", type number}, {"Geocoded Sums Insured_1", type number}}),
				    #"Filled Down1" = Table.FillDown(#"Changed Type1",{"Portfolio"}),
				    
				    // Rename columns
				    #"Renamed Columns" = Table.RenameColumns(#"Filled Down1",{{"Geocoded Sums Insured", "Previous Year"}, {"Geocoded Sums Insured_1", "Current Year"}}),
				    
				    // Add custom columns for client name, report date, report name, and exhibit
				    #"Added Custom2" = Table.AddColumn(#"Renamed Columns", "Client Name", each ClientName),
				    #"Added Custom3" = Table.AddColumn(#"Added Custom2", "Report Date", each ReportDate),
				    #"Added Custom4" = Table.AddColumn(#"Added Custom3", "Report Name", each ReportName),
				    #"Added Custom5" = Table.AddColumn(#"Added Custom4", "Exhibit", each "Known Year Built"),
				    
				    // Rename additional columns and change types
				    #"Renamed Columns1" = Table.RenameColumns(#"Added Custom5",{{"Year Range", "Category"}, {"Ground-Up", "PY_Ground-Up"}, {"Gross", "PY_Gross"}, {"Net Pre-Cat", "PY_Net Pre-Cat"}, {"Ground-Up_4", "CY_Ground-Up"}, {"Gross_5", "CY_Gross"}, {"Net Pre-Cat_6", "CY_Net Pre-Cat"}}),
				    #"Changed Type" = Table.TransformColumnTypes(#"Renamed Columns1",{{"PY_Ground-Up", type number}, {"PY_Gross", type number}, {"PY_Net Pre-Cat", type number}, {"CY_Ground-Up", type number}, {"CY_Gross", type number}, {"CY_Net Pre-Cat", type number}}),
				    #"Renamed Columns2" = Table.RenameColumns(#"Changed Type",{{"# Risks (Locations)", "# Risks (previous year)"}, {"Average SI", "Average SI (previous year)"}, {"# Risks (Locations)_2", "# Risks (current year)"}, {"Average SI_3", "Average SI (current year)"}}),
				    #"Changed Type2" = Table.TransformColumnTypes(#"Renamed Columns2",{{"Average SI (current year)", type number}, {"# Risks (current year)", type number}, {"Average SI (previous year)", type number}, {"# Risks (previous year)", type number}}),
				    #"Replaced Errors" = Table.ReplaceErrorValues(#"Changed Type2", {{"Average SI (previous year)", 0}}),
				    #"Replaced Errors1" = Table.ReplaceErrorValues(#"Replaced Errors", {{"Average SI (current year)", 0}})
				in
				    #"Replaced Errors1"
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

